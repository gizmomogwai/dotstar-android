buildscript {
  repositories {
    jcenter()
    mavenCentral()
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:2.3.3'
  }
}

apply plugin: 'com.android.application'

repositories {
  jcenter()
  mavenCentral()
  maven { url "https://jitpack.io" }
}

def butterknifeVersion = '8.3.0' // upgrading to 8.6.0 leads to a
dependencies {
  compile 'com.android.support:appcompat-v7:23.2.1'
  compile 'com.android.support:design:23.2.1'
  compile 'com.android.support:cardview-v7:23.2.1'
  compile 'com.android.support:recyclerview-v7:23.2.1'

  compile 'com.github.QuadFlask:colorpicker:0.0.11'
  compile 'com.google.guava:guava:22.0-android' // should not be needed its already in lib
  compile 'com.squareup.retrofit2:retrofit:2.1.0' // should not be needed its already in lib

  compile "com.jakewharton:butterknife:$butterknifeVersion"
  annotationProcessor "com.jakewharton:butterknife-compiler:$butterknifeVersion"

  compile project(':lib')
}

// from http://stackoverflow.com/a/22597752
def passwordFromKeychain = { name ->
  def proc = ["security", "find-generic-password", "-s", name, "-a", name, "-w"].execute()
  proc.waitFor()
  def stdout = proc.in.text
  return stdout.trim()
}

def gitVersion = {
  def version = "git describe --dirty".execute().text.trim();
  println("USING VERSION: ${version} for this build");
  println("USING VERSION: ${version} for this build");
  println("USING VERSION: ${version} for this build");
  println("USING VERSION: ${version} for this build");
  println("USING VERSION: ${version} for this build");
  println("USING VERSION: ${version} for this build");
  println("USING VERSION: ${version} for this build");
  println("USING VERSION: ${version} for this build");
  println("USING VERSION: ${version} for this build");
  println("USING VERSION: ${version} for this build");
  return version;
}

android {
  compileSdkVersion 23
  buildToolsVersion '26.0.0'

  defaultConfig {
    minSdkVersion 21
    targetSdkVersion 21
    versionCode 2
    versionName gitVersion()
  }

  dexOptions {
    javaMaxHeapSize "4g"
    preDexLibraries = false
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_7
    targetCompatibility JavaVersion.VERSION_1_7
  }

  signingConfigs {
    release {
      // just add a new password with dotstar-play-store, dotstar-play-store and password in keychain on osx
      storeFile file("store/release.keystore")
      storePassword passwordFromKeychain("dotstar-play-store")
      keyAlias "dotstar"
      keyPassword passwordFromKeychain("dotstar-play-store")
    }
  }

  buildTypes {
    release {
      signingConfig signingConfigs.release
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      applicationIdSuffix ".release"
      resValue "string", "app_name", "DotStar"
    }
    debug {
      applicationIdSuffix ".debug"
      resValue "string", "app_name", "DotStar-Debug"
    }
  }

  lintOptions {
    abortOnError false
  }

}
