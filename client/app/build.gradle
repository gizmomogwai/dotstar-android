buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:2.2.0-beta2'
  }
}

apply plugin: 'com.android.application'

repositories {
  jcenter()
  mavenCentral()
  maven { url "https://jitpack.io" }
}

dependencies {
  compile 'com.android.support:appcompat-v7:23.2.1'
  compile 'com.android.support:design:23.2.1'
  compile 'com.android.support:cardview-v7:23.2.1'
  compile 'com.android.support:recyclerview-v7:23.2.1'
  compile 'com.github.QuadFlask:colorpicker:0.0.11'
  compile 'com.jakewharton:butterknife:7.0.1'

  // this should not be necessary
  compile 'joda-time:joda-time:2.9.2'
  compile 'com.google.guava:guava:19.0'
  compile 'com.squareup.retrofit2:retrofit:2.1.0'
  compile 'com.squareup.retrofit2:converter-gson:2.1.0'
  compile 'com.squareup.okhttp3:logging-interceptor:3.3.0'
  compile('org.simpleframework:simple-xml:2.7.1') {
    exclude group: 'stax', module: 'stax-api'
    exclude group: 'xpp3', module: 'xpp3'
  }
  // but otherwise my idea does not take Call, Response from retrofit2

  compile project(':lib')
}

// from http://stackoverflow.com/a/22597752
def passwordFromKeychain = { name ->
  def proc = ["security", "find-generic-password", "-s", name, "-a", name, "-w"].execute()
  proc.waitFor()
  def stdout = proc.in.text
  return stdout.trim()
}

android {
  compileSdkVersion 23
  buildToolsVersion '24.0.2'

  defaultConfig {
    minSdkVersion 21
    targetSdkVersion 21
  }

  dexOptions {
    javaMaxHeapSize "4g"
    preDexLibraries = false
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_7
    targetCompatibility JavaVersion.VERSION_1_7
  }

  /*
  signingConfigs {
    release {
      storeFile file("release.keystore")
      storePassword passwordFromKeychain("books-play-store")
      keyAlias "books"
      keyPassword passwordFromKeychain("books-play-store")
    }
  }

  buildTypes {
    release {
      signingConfig signingConfigs.release
    }
  }
  */

  lintOptions {
    abortOnError false
  }

}
